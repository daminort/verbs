{"version":3,"sources":["components/Task/Task.style.ts","components/Task/Task.tsx","../node_modules/react-use/esm/useEffectOnce.js","../node_modules/react-use/esm/useMount.js","components/FormField/FormField.style.ts","components/FormField/FormField.tsx","components/Input/Input.style.ts","components/Input/Input.tsx","components/Button/Button.style.ts","components/Button/Button.tsx","components/ButtonsBlock/ButtonsBlock.style.ts","components/ButtonsBlock/ButtonsBlock.tsx","components/Skeletons/Blocks/style.ts","components/Skeletons/Blocks/BlockInput.tsx","components/Skeletons/Blocks/BlockText.tsx","components/Skeletons/IrregularRuEn/IrregularRuEn.style.ts","components/Skeletons/IrregularRuEn/IrregularRuEn.tsx","components/Placeholders/IrregularRuEn/IrregularRuEn.style.ts","components/Placeholders/IrregularRuEn/IrregularRuEn.tsx","containers/Score/Score.style.ts","containers/Score/Score.tsx","pages/IrregularRuEn/IrregularRuEn.tsx","pages/IrregularRuEn/index.ts"],"names":["text","THEME","Wrapper","styled","div","accent","main","Task","value","disabled","wrapperClass","clsx","className","useEffectOnce","effect","useEffect","useMount","fn","size","mini","FormField","props","label","children","icon","isError","showIcon","iconName","iconColor","Icon","name","color","border","bg","input","focus","error","Input","forwardRef","ref","placeholder","onChange","status","message","tabIndex","onChangeValue","useCallback","event","target","showSuccess","showError","showMessage","inputClass","StyledBtn","button","secondaryAccent","secondary","Button","onClick","displayName","ButtonsBlock","skeleton","start","middle","end","basicStyle","css","BlockInput","BlockText","IrregularRuEn","inputProps","Score","total","useSelector","selectTotal","passed","selectPassed","correct","selectCorrect","wrong","selectWrong","progress","selectProgress","defaultStatus","infinitive","pastSimple","pastParticipant","defaultErrors","dispatch","useDispatch","loading","selectLoading","isSessionActive","selectIsSessionActive","phase","selectSessionPhase","currentItem","selectCurrentIrregularRuEn","shallowEqual","useState","setInfinitive","setPastSimple","setPastParticipant","setStatus","errors","setErrors","infinitiveRef","useRef","nextRef","appActions","pageReload","Modes","irregular","Directions","ruEn","current","SessionPhase","results","onClickCheck","values","IrregularUtils","validateRuEn","sessionActions","phaseSet","onClickNext","Object","some","next","finish","isCheckDisabled","validation","isNextDisabled","waiting","placeholders","translation"],"mappings":"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","file":"static/js/4.890aeb48.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { THEME } from '../../assets/constants/theme';\n\nconst { text } = THEME;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  font-size: 1rem;\n  color: ${text.accent};\n\n  &.disabled {\n    color: ${text.main};\n  }\n`;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\nimport { Wrapper } from './Task.style';\n\ninterface Props {\n  value: string;\n  disabled?: boolean;\n}\n\nconst Task: FC<Props> = ({ value, disabled = false }) => {\n  const wrapperClass = clsx({\n    disabled,\n  });\n\n  return <Wrapper className={wrapperClass}>{value}</Wrapper>;\n};\n\nexport default Task;\nexport { Task };\n","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import useEffectOnce from './useEffectOnce';\nvar useMount = function (fn) {\n    useEffectOnce(function () {\n        fn();\n    });\n};\nexport default useMount;\n","import styled from 'styled-components';\nimport { THEME } from '../../assets/constants/theme';\n\nconst { size } = THEME;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 1rem;\n\n  .label {\n    width: 40%;\n    font-size: ${size.mini};\n  }\n\n  .control {\n    width: 60%;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Icon } from '../Icon';\nimport { Wrapper } from './FormField.style';\n\ntype IconType = 'success' | 'error';\n\ninterface Props {\n  label: string | React.ReactNode;\n  icon?: IconType;\n}\n\nconst FormField: FC<Props> = props => {\n  const { label, children, icon } = props;\n\n  const isSuccess = icon === 'success';\n  const isError = icon === 'error';\n\n  const showIcon = isSuccess || isError;\n  const iconName = isError ? 'close' : 'check';\n  const iconColor = isError ? 'error' : 'success';\n\n  return (\n    <Wrapper>\n      <div className=\"label\">{label}</div>\n      <div className=\"control\">{children}</div>\n      {showIcon && <Icon name={iconName} size=\"small\" color={iconColor} />}\n    </Wrapper>\n  );\n};\n\nexport default FormField;\nexport { FormField };\n","import styled from 'styled-components';\nimport { THEME } from '../../assets/constants/theme';\n\nconst { border, size, text, bg } = THEME;\n\nexport const Wrapper = styled.div`\n  display: block;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    box-sizing: border-box;\n    border: 2px solid ${border.input};\n    border-radius: 4px;\n    font-size: ${size.mini};\n    padding: 0.5rem;\n    font-family: inherit;\n    background-color: ${bg.input};\n\n    &::placeholder {\n      color: ${text.main};\n    }\n\n    &.error {\n      color: ${text.main};\n      text-decoration: line-through;\n    }\n\n    &:focus {\n      outline: 0;\n      border: 2px solid ${border.focus};\n    }\n\n    &:disabled {\n      background-color: ${bg.input};\n    }\n  }\n\n  .icon {\n    position: absolute;\n    right: 0.5rem;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  .message {\n    position: absolute;\n    right: 1.8rem;\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${text.error};\n    font-size: ${size.mini};\n  }\n`;\n","import React, { useCallback, ChangeEvent, forwardRef, Ref } from 'react';\nimport clsx from 'clsx';\n\nimport { Status } from '../../assets/types/input';\nimport { Icon } from '../Icon';\nimport { Wrapper } from './Input.style';\n\ninterface Props {\n  value: string;\n  onChange: (v: string) => void;\n  name?: string;\n  placeholder?: string;\n  status?: Status;\n  message?: string;\n  disabled?: boolean;\n  tabIndex?: number;\n}\n\nconst Input = forwardRef((props: Props, ref: Ref<HTMLInputElement>) => {\n  const {\n    value,\n    placeholder,\n    onChange,\n    name = '',\n    status = 'normal',\n    message = '',\n    disabled = false,\n    tabIndex,\n  } = props;\n\n  const onChangeValue = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      onChange(event.target.value);\n    },\n    [onChange]\n  );\n\n  const showSuccess = status === 'success';\n  const showError = status === 'error';\n  const showMessage = showError && !!message;\n\n  const inputClass = clsx('input', {\n    error: showError,\n  });\n\n  return (\n    <Wrapper>\n      <input\n        ref={ref}\n        name={name}\n        value={value}\n        disabled={disabled}\n        placeholder={placeholder}\n        onChange={onChangeValue}\n        className={inputClass}\n        tabIndex={tabIndex}\n      />\n      {showSuccess && <Icon name=\"check\" size=\"small\" color=\"success\" />}\n      {showError && <Icon name=\"close\" size=\"small\" color=\"error\" />}\n      {showMessage && <span className=\"message\">{message}</span>}\n    </Wrapper>\n  );\n});\n\nexport default Input;\nexport { Input };\n","import styled from 'styled-components';\nimport { THEME } from '../../assets/constants/theme';\n\nconst { bg, text, border } = THEME;\n\nexport const StyledBtn = styled.button`\n  font-size: 0.9rem;\n  font-weight: 500;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  padding: 0.7rem 1.5rem;\n  min-width: 6rem;\n  background-color: ${bg.secondaryAccent};\n  color: ${text.accent};\n  cursor: pointer;\n\n  &:disabled {\n    background-color: ${bg.secondary};\n    color: ${text.main};\n    pointer-events: none;\n  }\n\n  &:focus {\n    outline: 0;\n    border: 1px solid ${border.focus};\n  }\n`;\n","import React, { Ref, forwardRef, ReactNode } from 'react';\n\nimport { StyledBtn } from './Button.style';\n\ninterface Props {\n  children: ReactNode;\n  onClick: () => void;\n  disabled?: boolean;\n  tabIndex?: number;\n}\n\nconst Button = forwardRef((props: Props, ref: Ref<HTMLButtonElement>) => {\n  const { onClick, children, tabIndex, disabled = false } = props;\n\n  return (\n    <StyledBtn ref={ref} tabIndex={tabIndex} disabled={disabled} onClick={onClick}>\n      {children}\n    </StyledBtn>\n  );\n});\n\nButton.displayName = 'Button';\n\nexport default Button;\nexport { Button };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1rem;\n`;\n","import React, { FC } from 'react';\nimport { Wrapper } from './ButtonsBlock.style';\n\nconst ButtonsBlock: FC = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default ButtonsBlock;\nexport { ButtonsBlock };\n","import { css } from 'styled-components';\nimport { THEME } from '../../../assets/constants/theme';\n\nconst { skeleton } = THEME;\nconst { start, middle, end } = skeleton;\n\nexport const basicStyle = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  border-radius: 4px;\n  background: linear-gradient(90deg, ${start}, ${middle}, ${end});\n  background-size: 400% 100%;\n  animation: loading 1.5s ease infinite;\n\n  @keyframes loading {\n    0% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0 50%;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { basicStyle } from './style';\n\nexport const BlockInput = styled.div`\n  ${basicStyle};\n\n  height: 2rem;\n`;\n","import styled from 'styled-components';\nimport { basicStyle } from './style';\n\nexport const BlockText = styled.div`\n  ${basicStyle};\n\n  height: 1rem;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n\n  .label-01 {\n    max-width: 80%;\n  }\n\n  .label-02 {\n    max-width: 40%;\n  }\n\n  .label-03 {\n    max-width: 60%;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Task } from '../../Task';\nimport { FormField } from '../../FormField';\nimport { BlockText, BlockInput } from '../Blocks';\nimport { Wrapper } from './IrregularRuEn.style';\n\nconst IrregularRuEn: FC = () => {\n  return (\n    <Wrapper>\n      <Task disabled value=\"loading...\" />\n      <FormField label={<BlockText className=\"label-01\" />}>\n        <BlockInput />\n      </FormField>\n      <FormField label={<BlockText className=\"label-02\" />}>\n        <BlockInput />\n      </FormField>\n      <FormField label={<BlockText className=\"label-03\" />}>\n        <BlockInput />\n      </FormField>\n    </Wrapper>\n  );\n};\n\nexport default IrregularRuEn;\nexport { IrregularRuEn };\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: block;\n\n  .label-01 {\n    max-width: 80%;\n  }\n\n  .label-02 {\n    max-width: 40%;\n  }\n\n  .label-03 {\n    max-width: 60%;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport { Task } from '../../Task';\nimport { FormField } from '../../FormField';\nimport { Input } from '../../Input';\nimport { Wrapper } from './IrregularRuEn.style';\n\nconst inputProps = {\n  disabled: true,\n  value: '',\n  onChange: () => {},\n};\n\nconst IrregularRuEn: FC = () => {\n  return (\n    <Wrapper>\n      <Task disabled value=\"waiting for start...\" />\n      <FormField label=\"Infinitive\">\n        <Input placeholder=\"infinitive\" {...inputProps} />\n      </FormField>\n      <FormField label=\"Past Simple\">\n        <Input placeholder=\"past simple\" {...inputProps} />\n      </FormField>\n      <FormField label=\"Past Participle\">\n        <Input placeholder=\"past participle\" {...inputProps} />\n      </FormField>\n    </Wrapper>\n  );\n};\n\nexport default IrregularRuEn;\nexport { IrregularRuEn };\n","import styled from 'styled-components';\nimport { THEME } from '../../assets/constants/theme';\n\nconst { text } = THEME;\n\nexport const Wrapper = styled.div`\n  display: block;\n  padding: 1rem 1rem;\n\n  h3 {\n    font-size: 0.9rem;\n    font-weight: 500;\n    color: ${text.accent};\n    padding-bottom: 0.5rem;\n  }\n\n  .row {\n    display: flex;\n    font-size: 0.8rem;\n    padding: 0.25rem 0;\n\n    .label {\n      width: 25%;\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectTotal, selectPassed, selectCorrect, selectWrong, selectProgress } from '../../redux/score/selectors';\n\nimport { Wrapper } from './Score.style';\n\nconst Score: FC = () => {\n  const total = useSelector(selectTotal);\n  const passed = useSelector(selectPassed);\n  const correct = useSelector(selectCorrect);\n  const wrong = useSelector(selectWrong);\n  const progress = useSelector(selectProgress);\n\n  return (\n    <Wrapper>\n      <h3>Score</h3>\n      <div className=\"row\">\n        <span className=\"label\">Passed</span>\n        <span className=\"value\">\n          {passed} / {total}\n        </span>\n      </div>\n      <div className=\"row\">\n        <span className=\"label\">Correct</span>\n        <span className=\"value\">{correct}</span>\n      </div>\n      <div className=\"row\">\n        <span className=\"label\">Wrong</span>\n        <span className=\"value\">{wrong}</span>\n      </div>\n      <div className=\"row\">\n        <span className=\"label\">Progress</span>\n        <span className=\"value\">{progress} %</span>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Score;\nexport { Score };\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useMount } from 'react-use';\n\nimport { GenericMap, HashMap } from '../../assets/types/common';\nimport { Directions, Modes } from '../../assets/enums/app';\nimport { SessionPhase } from '../../assets/enums/session';\nimport { Status } from '../../assets/types/input';\n\nimport { IrregularUtils } from '../../utils/IrregularUtils';\n\nimport { appActions } from '../../redux/app/actions';\nimport { sessionActions } from '../../redux/session/actions';\nimport { selectLoading } from '../../redux/app/selectors';\nimport { selectCurrentIrregularRuEn, selectIsSessionActive, selectSessionPhase } from '../../redux/session/selectors';\n\nimport { Task } from '../../components/Task';\nimport { FormField } from '../../components/FormField';\nimport { Input } from '../../components/Input';\nimport { Button } from '../../components/Button';\nimport { ButtonsBlock } from '../../components/ButtonsBlock/ButtonsBlock';\n\nimport { IrregularRuEn as Skeleton } from '../../components/Skeletons';\nimport { IrregularRuEn as Placeholder } from '../../components/Placeholders';\n\nimport { Score } from '../../containers/Score';\n\nconst defaultStatus: GenericMap<Status> = {\n  infinitive: 'normal',\n  pastSimple: 'normal',\n  pastParticipant: 'normal',\n};\n\nconst defaultErrors: HashMap = {\n  infinitive: '',\n  pastSimple: '',\n  pastParticipant: '',\n};\n\nconst IrregularRuEn: FC = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n  const isSessionActive = useSelector(selectIsSessionActive);\n  const phase = useSelector(selectSessionPhase);\n  const currentItem = useSelector(selectCurrentIrregularRuEn, shallowEqual);\n\n  const [infinitive, setInfinitive] = useState('');\n  const [pastSimple, setPastSimple] = useState('');\n  const [pastParticipant, setPastParticipant] = useState('');\n  const [status, setStatus] = useState(defaultStatus);\n  const [errors, setErrors] = useState(defaultErrors);\n\n  const infinitiveRef = useRef<HTMLInputElement>(null);\n  const nextRef = useRef<HTMLButtonElement>(null);\n\n  useMount(() => {\n    dispatch(appActions.pageReload(Modes.irregular, Directions.ruEn));\n  });\n\n  useEffect(() => {\n    if (infinitiveRef.current) {\n      infinitiveRef.current.focus();\n    }\n\n    setInfinitive('');\n    setPastSimple('');\n    setPastParticipant('');\n    setStatus(defaultStatus);\n    setErrors(defaultErrors);\n  }, [currentItem, setInfinitive, setPastSimple, setPastParticipant]);\n\n  useEffect(() => {\n    if (nextRef.current && phase === SessionPhase.results) {\n      nextRef.current.focus();\n    }\n  }, [phase]);\n\n  const onClickCheck = useCallback(() => {\n    const values = {\n      infinitive,\n      pastSimple,\n      pastParticipant,\n    };\n    const { status, errors } = IrregularUtils.validateRuEn(currentItem, values);\n    setStatus(status);\n    setErrors(errors);\n    dispatch(sessionActions.phaseSet(SessionPhase.results));\n  }, [dispatch, currentItem, infinitive, pastSimple, pastParticipant, setStatus, setErrors]);\n\n  const onClickNext = useCallback(() => {\n    const isError = Object.values(status).some(status => status === 'error');\n    dispatch(sessionActions.next(isError));\n  }, [dispatch, status]);\n\n  if (loading) {\n    return <Skeleton />;\n  }\n\n  if (!isSessionActive) {\n    return (\n      <>\n        <Placeholder />\n        {phase === SessionPhase.finish && <Score />}\n      </>\n    );\n  }\n\n  const isCheckDisabled = phase === SessionPhase.validation || phase === SessionPhase.results;\n  const isNextDisabled = phase === SessionPhase.waiting || phase === SessionPhase.validation;\n\n  const placeholders = {\n    infinitive: errors.infinitive ? '' : 'infinitive',\n    pastSimple: errors.pastSimple ? '' : 'past simple',\n    pastParticipant: errors.pastParticipant ? '' : 'past participant',\n  };\n\n  return (\n    <>\n      <Task value={currentItem.translation} />\n      <FormField label=\"Infinitive\">\n        <Input\n          name=\"infinitive\"\n          tabIndex={1}\n          placeholder={placeholders.infinitive}\n          ref={infinitiveRef}\n          value={infinitive}\n          status={status.infinitive}\n          message={errors.infinitive}\n          onChange={setInfinitive}\n        />\n      </FormField>\n      <FormField label=\"Past Simple\">\n        <Input\n          name=\"pastSimple\"\n          tabIndex={2}\n          placeholder={placeholders.pastSimple}\n          value={pastSimple}\n          status={status.pastSimple}\n          message={errors.pastSimple}\n          onChange={setPastSimple}\n        />\n      </FormField>\n      <FormField label=\"Past Participle\">\n        <Input\n          name=\"pastParticipant\"\n          tabIndex={3}\n          placeholder={placeholders.pastParticipant}\n          value={pastParticipant}\n          status={status.pastParticipant}\n          message={errors.pastParticipant}\n          onChange={setPastParticipant}\n        />\n      </FormField>\n      <ButtonsBlock>\n        <Button tabIndex={4} disabled={isCheckDisabled} onClick={onClickCheck}>\n          Check\n        </Button>\n        <Button tabIndex={5} ref={nextRef} disabled={isNextDisabled} onClick={onClickNext}>\n          Next\n        </Button>\n      </ButtonsBlock>\n\n      <Score />\n    </>\n  );\n};\n\nexport default IrregularRuEn;\nexport { IrregularRuEn };\n","import { IrregularRuEn } from './IrregularRuEn';\n\nexport default IrregularRuEn;\nexport { IrregularRuEn };\n"],"sourceRoot":""}